#!/bin/bash

# Interface Gr√°fica para KDE usando kdialog
# Vers√£o: 1.0-beta
# Data: 2025-09-28

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}üñ•Ô∏è Linux Install Scripts - Interface KDE${NC}"
echo "============================================="

# Verificar se kdialog est√° dispon√≠vel
if ! command -v kdialog &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è kdialog n√£o encontrado. Tentando instalar...${NC}"
    if command -v zypper &> /dev/null; then
        sudo zypper install -y kdialog
    elif command -v apt &> /dev/null; then
        sudo apt install -y kdialog
    else
        echo -e "${RED}‚ùå N√£o foi poss√≠vel instalar kdialog${NC}"
        exit 1
    fi
fi

# Fun√ß√£o para mostrar menu principal
show_main_menu() {
    local choice=$(kdialog --title "Linux Install Scripts" \
        --menu "Selecione uma op√ß√£o:" \
        "1" "üöÄ Instala√ß√£o Autom√°tica" \
        "2" "üìã Listar Programas" \
        "3" "üóëÔ∏è Desinstalar Programas" \
        "4" "üíæ Backup/Restore" \
        "5" "üìä Estat√≠sticas" \
        "6" "‚ùì Ajuda" \
        "7" "üö™ Sair")
    
    echo "$choice"
}

# Fun√ß√£o para instala√ß√£o autom√°tica
install_programs() {
    if kdialog --title "Instala√ß√£o Autom√°tica" \
        --yesno "Deseja executar a instala√ß√£o autom√°tica de todos os programas?\n\nIsso instalar√°:\n‚Ä¢ Navegadores (Chrome, Brave, Firefox)\n‚Ä¢ Editores (VSCode, Cursor)\n‚Ä¢ Ferramentas (AnyDesk, Spotify)\n‚Ä¢ Desenvolvimento (Java, Node.js)\n‚Ä¢ Jogos (Osu!)"; then
        
        kdialog --title "Executando Instala√ß√£o" \
            --msgbox "Executando instala√ß√£o autom√°tica...\n\nPor favor, aguarde enquanto os programas s√£o instalados."
        
        # Executar instala√ß√£o
        ./auto-install.sh
        
        kdialog --title "Instala√ß√£o Conclu√≠da" \
            --msgbox "‚úÖ Instala√ß√£o conclu√≠da com sucesso!\n\nTodos os programas foram instalados."
    fi
}

# Fun√ß√£o para listar programas
list_programs() {
    local programs="üìã Programas Dispon√≠veis:\n\n"
    programs+="üîß Desenvolvimento:\n"
    programs+="‚Ä¢ VSCode - Editor de c√≥digo\n"
    programs+="‚Ä¢ Cursor - Editor com IA\n"
    programs+="‚Ä¢ Java (OpenJDK) - Linguagem de programa√ß√£o\n"
    programs+="‚Ä¢ Node.js - Runtime JavaScript\n"
    programs+="‚Ä¢ Compiladores (GCC, G++, Make, CMake)\n\n"
    programs+="üåê Navegadores:\n"
    programs+="‚Ä¢ Google Chrome\n"
    programs+="‚Ä¢ Brave Browser\n"
    programs+="‚Ä¢ Firefox\n\n"
    programs+="üéµ Multim√≠dia:\n"
    programs+="‚Ä¢ Spotify - Streaming de m√∫sica\n"
    programs+="‚Ä¢ Osu! - Jogo de ritmo\n\n"
    programs+="üõ†Ô∏è Ferramentas:\n"
    programs+="‚Ä¢ AnyDesk - Acesso remoto\n"
    programs+="‚Ä¢ Depend√™ncias de desenvolvimento"
    
    kdialog --title "Programas Dispon√≠veis" \
        --msgbox "$programs"
}

# Fun√ß√£o para desinstalar programas
uninstall_programs() {
    if kdialog --title "Desinstalar Programas" \
        --yesno "Deseja executar o script de desinstala√ß√£o?\n\nIsso remover√° todos os programas instalados pelo script."; then
        
        kdialog --title "Desinstala√ß√£o" \
            --msgbox "Executando script de desinstala√ß√£o..."
        
        # Executar script de desinstala√ß√£o
        ./uninstall.sh
        
        kdialog --title "Desinstala√ß√£o Conclu√≠da" \
            --msgbox "‚úÖ Desinstala√ß√£o conclu√≠da com sucesso!"
    fi
}

# Fun√ß√£o para backup
backup_menu() {
    local backup_choice=$(kdialog --title "Backup/Restore" \
        --menu "Selecione uma op√ß√£o de backup:" \
        "1" "üíæ Criar Backup" \
        "2" "üìã Listar Backups" \
        "3" "üìä Estat√≠sticas")
    
    case "$backup_choice" in
        "1")
            kdialog --title "Criando Backup" \
                --msgbox "Criando backup do sistema..."
            ./backup/backup.sh create
            kdialog --title "Backup Conclu√≠do" \
                --msgbox "‚úÖ Backup criado com sucesso!"
            ;;
        "2")
            ./backup/backup.sh list
            ;;
        "3")
            ./backup/backup.sh stats
            ;;
    esac
}

# Fun√ß√£o para mostrar estat√≠sticas
show_statistics() {
    local stats="üìä Estat√≠sticas do Sistema\n\n"
    stats+="üñ•Ô∏è Sistema:\n"
    if command -v lsb_release &> /dev/null; then
        stats+="‚Ä¢ Distribui√ß√£o: $(lsb_release -d | cut -f2)\n"
    else
        stats+="‚Ä¢ Sistema: $(uname -s) $(uname -r)\n"
    fi
    stats+="‚Ä¢ Kernel: $(uname -r)\n"
    stats+="‚Ä¢ Usu√°rio: $USER\n\n"
    stats+="üíæ Espa√ßo em Disco:\n"
    stats+="‚Ä¢ $(df -h / | tail -1 | awk '{print $4}') dispon√≠vel\n\n"
    stats+="üß† Mem√≥ria:\n"
    stats+="‚Ä¢ $(free -h | grep Mem | awk '{print $7}') dispon√≠vel"
    
    kdialog --title "Estat√≠sticas do Sistema" \
        --msgbox "$stats"
}

# Fun√ß√£o para mostrar ajuda
show_help() {
    local help_text="‚ùì Ajuda - Linux Install Scripts\n\n"
    help_text+="üöÄ Instala√ß√£o Autom√°tica:\n"
    help_text+="Selecione a op√ß√£o 1 para instalar todos os programas.\n\n"
    help_text+="üìã Listar Programas:\n"
    help_text+="Veja todos os programas dispon√≠veis para instala√ß√£o.\n\n"
    help_text+="üóëÔ∏è Desinstalar:\n"
    help_text+="Remove todos os programas instalados pelo script.\n\n"
    help_text+="üíæ Backup:\n"
    help_text+="Crie backups antes de grandes mudan√ßas.\n\n"
    help_text+="üìä Estat√≠sticas:\n"
    help_text+="Veja informa√ß√µes do sistema e programas instalados.\n\n"
    help_text+="üîó Suporte:\n"
    help_text+="‚Ä¢ Reposit√≥rio: https://github.com/xJCPMSx/linux-install-scripts\n"
    help_text+="‚Ä¢ Issues: https://github.com/xJCPMSx/linux-install-scripts/issues\n"
    help_text+="‚Ä¢ Documenta√ß√£o: README.md"
    
    kdialog --title "Ajuda" \
        --msgbox "$help_text"
}

# Fun√ß√£o principal
main() {
    # Verificar se est√° sendo executado em modo gr√°fico
    if [ -z "$DISPLAY" ]; then
        echo -e "${RED}‚ùå Erro: Interface gr√°fica n√£o dispon√≠vel${NC}"
        echo "Execute em um ambiente gr√°fico ou use os scripts de linha de comando"
        exit 1
    fi
    
    while true; do
        local choice=$(show_main_menu)
        
        case "$choice" in
            "1")
                install_programs
                ;;
            "2")
                list_programs
                ;;
            "3")
                uninstall_programs
                ;;
            "4")
                backup_menu
                ;;
            "5")
                show_statistics
                ;;
            "6")
                show_help
                ;;
            "7")
                kdialog --title "Saindo" \
                    --msgbox "Obrigado por usar Linux Install Scripts!"
                exit 0
                ;;
            *)
                exit 0
                ;;
        esac
    done
}

# Executar fun√ß√£o principal
main "$@"
